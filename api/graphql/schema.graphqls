type Artifact {
    id: ID
    typeId: ID!
    uri: String!
    state: Int!
    name: String!
    externalId: String
    createTimeSinceEpoch: Int!
    lastUpdateTimeSinceEpoch: Int!
    type: ArtifactType!
    properties : [ArtifactProperty!]
}

type ArtifactProperty {
    artifactId: ID
    name: String
    isCustomProperty: Boolean!
    propertyValue: Value!
}

type Context {
    id: ID
    typeId: ID!
    name: String!
    externalId: String
    createTimeSinceEpoch: Int!
    lastUpdateTimeSinceEpoch: Int!
    type: ContextType!
    parent: Context
    children: [Context]
    attributions: [Artifact!]
    associations: [Execution!]
    properties: [ContextProperty!]
}

type ContextProperty {
    contextId: ID
    name: String!
    isCustomProperty: Int!
    propertyValue: Value!
}

type Event {
    id: ID
    artifactId: ID!
    executionId: ID!
    type: Int!
    artifact: Artifact
    execution: Execution
    millisecondsSinceEpoch: Int!
}

type EventPath {
    eventId: ID!
    isIndexStep: Int!
    stepIndex: Int!
    stepKey: String!
}

type Execution {
    id: ID
    typeId: ID!
    lastKnownState: Int!
    name: String!
    externalId: String
    createTimeSinceEpoch: Int!
    lastUpdateTimeSinceEpoch: Int!
    type: ExecutionType!
    properties: [ExecutionProperty!]
}

type ExecutionProperty {
    executionId: ID
    name: String!
    isCustomProperty: Int!
    propertyValue: Value!
}

union Value = IntValue | DoubleValue | StringValue | BoolValue

type IntValue {
    value: Int!
}

type DoubleValue {
    value: Float!
}

type StringValue {
    value: String!
}

type BoolValue {
    value: Boolean!
}

interface Type {
    id: ID
    name: String!
    version: String!
    typeKind: Int!
    description: String!
    externalId: String
    properties: [TypeProperty!]
}

type TypeProperty {
    typeId: ID!
    name: String!
    dataType: Int!
}

type ArtifactType implements Type {
    id: ID
    name: String!
    version: String!
    typeKind: Int!
    description: String!
    externalId: String
    properties: [TypeProperty!]
}

type ContextType implements Type {
    id: ID
    name: String!
    version: String!
    typeKind: Int!
    description: String!
    externalId: String
    properties: [TypeProperty!]
}

type ExecutionType implements Type {
    id: ID
    name: String!
    version: String!
    typeKind: Int!
    description: String!
    externalId: String
    inputType: String!
    outputType: String!
    properties: [TypeProperty!]
}

input TypeFilter {
    ids: [ID!]
    names: [String!]
    versions: [String!]
    externalIds: [String!]
}

input InstanceFilter {
    ids: [ID!]
    typeIds: [ID!]
    names: [String!]
    externalIds: [String!]
}

type Query {
    types(filter: TypeFilter): [Type!]
    artifactTypes(filter: TypeFilter): [ArtifactType!]
    contextTypes(filter: TypeFilter): [ContextType!]
    executionTypes(filter: TypeFilter): [ExecutionType!]
    artifacts(filter: InstanceFilter): [Artifact!]
    contexts(filter: InstanceFilter): [Context!]
    executions(filter: InstanceFilter): [Execution!]
    events: [Event!]
}
